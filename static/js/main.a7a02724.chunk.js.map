{"version":3,"sources":["App.js","index.js"],"names":["App","state","contacts","id","name","number","filter","handleSubmit","e","preventDefault","totalState","uuidv4","setState","prevState","reset","filterList","item","includes","target","value","handleChange","currentTarget","this","className","onSubmit","htmlFor","type","pattern","title","required","onChange","map","contact","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAgIeA,E,4MA1HbC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDC,OAAQ,GACRF,KAAM,GACNC,OAAQ,I,EAGVE,aAAe,SAACC,GACdA,EAAEC,iBACF,IACMC,EAAa,CACjBP,GAFeQ,cAGfP,KAAM,EAAKH,MAAMG,KACjBC,OAAQ,EAAKJ,MAAMI,QAGrB,EAAKO,UAAS,SAACC,GAAD,MAAgB,CAC5BX,SAAS,CAAEQ,GAAH,mBAAkBG,EAAUX,eAGtC,EAAKY,S,EAGPC,WAAa,SAACP,GACZ,EAAKI,UAAS,SAACC,GAAD,MAAgB,CAC5BX,SAAUW,EAAUX,SAASI,QAAO,SAACU,GAAD,OAClCA,EAAKZ,KAAKa,SAAST,EAAEU,OAAOC,e,EAKlCC,aAAe,SAACZ,GAAO,IAAD,EACIA,EAAEa,cAAlBjB,EADY,EACZA,KAAMe,EADM,EACNA,MACd,EAAKP,SAAL,eAAiBR,EAAOe,K,EAG1BL,MAAQ,WACN,EAAKF,SAAS,CACZN,OAAQ,GACRF,KAAM,GACNC,OAAQ,M,4CAIZ,WAAU,IAAD,EAC4BiB,KAAKrB,MAAhCC,EADD,EACCA,SAAUE,EADX,EACWA,KAAMC,EADjB,EACiBA,OACxB,OACE,qBAAKkB,UAAU,MAAf,SACE,mCACE,oBAAIA,UAAU,iBAAd,uBACA,uBAAMA,UAAU,OAAOC,SAAUF,KAAKf,aAAtC,UACE,uBAAOkB,QAAQ,WAAWF,UAAU,OAApC,kBAGA,uBACEG,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRV,MAAOf,EACP0B,SAAUR,KAAKF,aACfG,UAAU,YACVpB,GAAG,aAEL,uBAAOsB,QAAQ,UAAf,oBACA,uBACEC,KAAK,MACLtB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRN,UAAU,WACVO,SAAUR,KAAKF,aACfD,MAAOd,EACPF,GAAG,YAEL,wBAAQuB,KAAK,SAASH,UAAU,aAAhC,4BAKF,oBAAIA,UAAU,gBAAd,sBAEA,sDACA,uBACEG,KAAK,OACLtB,KAAK,SACLuB,QAAQ,yHACRC,MAAM,kcACNL,UAAU,cACVO,SAAUR,KAAKP,aAIjB,oBAAIQ,UAAU,eAAd,SACGrB,EAAS6B,KAAI,SAACC,GAAD,OACZ,+BACGA,EAAQ5B,KADX,KACmB4B,EAAQ3B,SADlB2B,EAAQ7B,kB,GAvGb8B,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a7a02724.chunk.js","sourcesContent":["import \"./App.css\";\nimport PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let idFullName = uuidv4();\n    const totalState = {\n      id: idFullName,\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [totalState, ...prevState.contacts],\n    }));\n\n    this.reset();\n  };\n\n  filterList = (e) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((item) =>\n        item.name.includes(e.target.value)\n      ),\n    }));\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({\n      filter: \"\",\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { contacts, name, number } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <h1 className=\"titlePhonebook\">Phonebook</h1>\n          <form className=\"form\" onSubmit={this.handleSubmit}>\n            <label htmlFor=\"sendName\" className=\"name\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={name}\n              onChange={this.handleChange}\n              className=\"inputName\"\n              id=\"sendName\"\n            />\n            <label htmlFor=\"sendTel\">Number</label>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              className=\"inputTel\"\n              onChange={this.handleChange}\n              value={number}\n              id=\"sendTel\"\n            />\n            <button type=\"submit\" className=\"submitName\">\n              Add contact\n            </button>\n          </form>\n\n          <h1 className=\"titleContacts\">Contacts</h1>\n\n          <p>Find contacts by name</p>\n          <input\n            type=\"text\"\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            className=\"inputFilter\"\n            onChange={this.filterList}\n            // value={filter}\n          />\n\n          <ul className=\"listContacts\">\n            {contacts.map((contact) => (\n              <li key={contact.id}>\n                {contact.name}: {contact.number}\n              </li>\n            ))}\n          </ul>\n        </header>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    })\n  ),\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}